#!/usr/bin/ruby
committer_stats = {}
# -- Exit gracefully --
Signal.trap("INT") {
  puts "\n\nHow well do you know your teammates?\n"
  committer_stats.each do |committer, stat|
    puts "For #{committer} you got #{stat[:num_correct]} out of #{stat[:num_guesses]} \n"
  end
  print "bye\n"
  exit 0
}

def print_header
  puts "----------------------------------------------------------"
  puts "                      THE GIT GAME                        "
  puts "----------------------------------------------------------"
  puts "Welcome! The goal of the git game is to guess committers"
  puts "based on their commit messages.\n\n"
end

def print_help
  puts "----------------------------------------------------------"
  puts "                          USAGE                           "
  puts "----------------------------------------------------------"
  puts "git game [extra git log options]"
  puts "EX: git game --after={2014-08-08}"
  puts "(This script already uses --no-merges and --pretty."
  puts "For more valid options see: http://gitref.org/inspect/)"
end

# -- Usage Text --
if ARGV.count > 0 && (input = ARGV.shift) == 'help'
  print_header
  print_help
  exit 0
end

# -- Parse commits --
COMMIT_DELIMITER = "XXXCOMMITXXX"
FIELD_DELIMITER = "|||"

commit_format = ["%an", "%ar", "%B"].join(FIELD_DELIMITER)

raw_commits = `git log --no-merges --pretty="#{COMMIT_DELIMITER}#{commit_format}" #{input if input}`.split("#{COMMIT_DELIMITER}")
commits = []
raw_commits.each do |c|
  next if c.strip.empty?

  fields = c.split(FIELD_DELIMITER)
  commits << {:author => fields[0], :date => fields[1], :message => fields[2]}
end

committers = commits.map { |c| c[:author] }.compact.uniq

# -- Show welcome message --
system('clear')

print_header
puts "You're playing in a repo with #{commits.size} commits and #{committers.size}"
puts "distinct committers.\n\n"

committers.each do |committer|
  puts committer
  committer_stats[committer] = {num_correct: 0, num_guesses: 0}
end

puts "\n"
puts "When guessing, all you have to do is type part of the"
puts "committer's name. It's case-insensitive. So for instance"
puts "if the committer was James Somers, you could write 'james'"
puts "or 'jam' or even 'j' to get full credit.\n\n"

puts "Ready? PRESS ANY KEY TO START PLAYING (Ctrl-C to quit)"

gets

system('clear')

# -- Game loop --
streak = 0

loop do
  commit = commits.shuffle.pop
  message = commit[:message]
  author = commit[:author]

  next if message.nil? || message.empty? || author.nil? || author.empty?

  puts "(#{commit[:date]})\n"
  puts "#{message.strip}\n\n"
  print "Who wrote it (current streak: #{streak})? "

  guess = gets

  while guess.strip.empty?
    print "Who wrote it (current streak: #{streak})? "
    guess = gets
  end

  if author.downcase.include?(guess.strip.downcase) && !guess.strip.empty?
    streak += 1
    puts "Got it!"
    committer_stats[author][:num_correct] += 1
  else
    streak = 0
    puts "Actually, it was #{author}."
  end
  committer_stats[author][:num_guesses] += 1

  sleep 1
  system('clear')
end
