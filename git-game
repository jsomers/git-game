#!/usr/bin/ruby

# -- Exit gracefully --
Signal.trap("INT") {
  print "bye "
  exit 0
}

def print_header
  puts "----------------------------------------------------------"
  puts "                      THE GIT GAME                        "
  puts "----------------------------------------------------------"
  puts "Welcome! The goal of the git game is to guess committers"
  puts "based on their commit messages.\n\n"
  puts "Note that commits with empty messages or empty author names will be skipped.\n\n"
end

def print_help
  puts "----------------------------------------------------------"
  puts "                          USAGE                           "
  puts "----------------------------------------------------------"
  puts "git game [extra git log options]"
  puts "EX: git game --after={2014-08-08}"
  puts "(This script already uses --no-merges and --pretty."
  puts "For more valid options see: http://gitref.org/inspect/)"
end

# -- Usage Text --
if ARGV.count > 0 && (input = ARGV.shift) == 'help'
  print_header
  print_help
  exit 0
end

# -- Parse commits --
COMMIT_DELIMITER = "XXXCOMMITXXX"
FIELD_DELIMITER = "|||"

commit_format = ["%an", "%ar", "%B"].join(FIELD_DELIMITER)

raw_commits = `git log --no-merges --pretty="#{COMMIT_DELIMITER}#{commit_format}" #{input if input}`.split("#{COMMIT_DELIMITER}")
commits = []
raw_commits.each do |c|
  next if c.strip.empty?

  fields = c.split(FIELD_DELIMITER)

  author = fields[0]
  message = fields[2]
  next if message.nil? || message.empty? || author.nil? || author.empty?

  commits << {:author => author, :date => fields[1], :message => message}
end

committers = commits.map { |c| c[:author] }.uniq

# -- Show welcome message --
system('clear')

print_header

if commits.empty?
    puts "Couldn't find any commits :("
    exit 0
end

puts "You're playing in a repo with #{commits.size} commits and #{committers.size}"
puts "distinct committers.\n\n"

committers.sort.each do |committer|
  puts committer
end

puts "\n"
puts "When guessing, all you have to do is type part of the"
puts "committer's name. It's case-insensitive. So for instance"
puts "if the committer was James Somers, you could write 'james'"
puts "or 'jam' or even 'j' to get full credit.\n\n"

puts "Ready? PRESS ANY KEY TO START PLAYING (Ctrl-C to quit)"

gets

system('clear')

# -- Game loop --
streak = 0
guessesTotal = 0

commits.shuffle!

loop do
  if commits.empty?
      puts "Looks like there are no more commits left :("
      break
  end

  commit = commits.pop
  author = commit[:author]

  puts "(#{commit[:date]})\n"
  puts "#{commit[:message].strip}\n\n"

  guess = "";

  loop do
    puts "Streak: #{streak} (#{guessesTotal} guessed in total)"
    print "Who wrote it? "

    guess = gets.strip

    break unless guess.empty?
  end

  if author.downcase.include?(guess.downcase)
    streak += 1
    guessesTotal += 1
    puts "Got it!"
  else
    streak = 0
    puts "Actually, it was #{author}."
  end

  sleep 1
  system('clear')
end
