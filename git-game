#!/usr/bin/ruby

# -- Exit gracefully --
Signal.trap("INT") {
  print "bye "
  exit 0
}

def header
<<EOS
----------------------------------------------------------
                      THE GIT GAME
----------------------------------------------------------
Welcome! The goal of the git game is to guess committers
based on their commit messages.\n\n
EOS
end

def help
<<EOS
----------------------------------------------------------
                          USAGE
----------------------------------------------------------
git game [extra git log options]
EX: git game --after={2014-08-08}
(This script already uses --no-merges and --pretty.
For more valid options see: http://gitref.org/inspect/)
EOS
end

def prompt
  "\nYour guess > "
end

# -- Usage Text --
if ARGV.count > 0 && (input = ARGV.shift) == 'help'
  print_header
  print_help
  exit 0
end

# -- Parse commits --
COMMIT_DELIMITER = "XXXCOMMITXXX"
FIELD_DELIMITER = "|||"

commit_format = ["%an", "%ar", "%B"].join(FIELD_DELIMITER)

raw_commits = `git log --no-merges --pretty="#{COMMIT_DELIMITER}#{commit_format}" #{input if input}`.split("#{COMMIT_DELIMITER}")
commits = []
raw_commits.each do |c|
  next if c.strip.empty?

  fields = c.split(FIELD_DELIMITER)
  commits << {:author => fields[0], :date => fields[1], :message => fields[2]}
end

committers = commits.map { |c| c[:author] }.compact.uniq

committer_options = committers.each_with_index.map do |committer, i|
  "#{i+1}) #{committer}"
end.join("\n")

# -- Show welcome message --
system('clear')

puts header
puts "You're playing in a repo with #{commits.size} commits "
puts "and #{committers.size} distinct committers.\n\n"

puts "#{committer_options}\n\n"
puts "When guessing, all you have to do is type the number of the committer\n\n"

puts "Ready? PRESS ENTER TO START PLAYING (Ctrl-C to quit anytime)"

gets

system('clear')

# -- Game loop --
streak = 0

loop do
  commit = commits.shuffle.pop
  message = commit[:message]
  author = commit[:author]

  next if message.nil? || message.empty? || author.nil? || author.empty?

  puts "(#{commit[:date]})\n"
  puts "#{message.strip}\n\n"

  puts "Who wrote it (current streak: #{streak})? "
  puts committer_options

  print prompt

  option = gets
  until (option =~ /^[0-9]+$/) && (option.to_i <= committers.size)
    puts "Enter a valid number for the option"
    print prompt
    option = gets
  end

  guess = committers[option.to_i-1]

  if author == guess
    streak += 1
    puts "Got it!"
  else
    streak = 0
    puts "Actually, it was #{author}."
  end

  sleep 1
  system('clear')
end
